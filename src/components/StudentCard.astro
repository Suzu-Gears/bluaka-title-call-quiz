---
import type { Student } from '@/lib/interfaces'

const { name, voiceActor } = Astro.props as Student

const calculateFontSize = (name: string): string => {
  const baseFontSize = 16
  const maxLength = 6
  if (name.length > maxLength) {
    return `${baseFontSize * (maxLength / name.length) + 2.5}px; letter-spacing: -2px;`
  }
  return `${baseFontSize}px`
}
---

<div class="grid-item" data-name={name}>
  <div class="progress-bar" id={`progress-${name}`}></div>
  <div class="grid-item-content">
    <img src={`/image/${name}.webp`} loading="lazy" alt={name} />
    <p style={`font-size: ${calculateFontSize(name)}`}>{name}</p>
    <small>CV.{voiceActor}</small>
  </div>
</div>

<style>
  .grid-item {
    position: relative;
    text-align: center;
    cursor: pointer;
    overflow: hidden;
    width: 100%;
    border-radius: 4px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .grid-item img {
    width: 100%;
    aspect-ratio: 1;
    object-fit: cover;
    border-radius: 0px;
    transition: transform 0.3s;
    user-select: none;
    user-drag: none;
    -webkit-user-drag: none;
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
  }

  .grid-item img:hover {
    transform: scale(1.05);
  }

  .grid-item p {
    margin: 0;
    padding: 0;
    height: 16px;
    white-space: nowrap;
    font-family: sans-serif;
  }

  .grid-item small {
    margin: 0;
    padding: 0;
    font-size: 12px;
    white-space: nowrap;
    font-family: sans-serif;
  }

  .progress-bar {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background: rgba(0, 123, 255, 0.3);
    width: 0;
    z-index: 1;
  }

  .grid-item-content {
    position: relative;
    z-index: 2;
  }
</style>
